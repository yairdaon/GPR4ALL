Introduction
--------------------------------------------------------------------------------
This package is intended to do the following ( assumption - calculating EXACT 
log-likelihood is expensive ):

1. Get some data set of (location ,  exact log-likelihood) pairs. log-likelihood
 given up to an additive constant.
2. Perform Gaussian process regression (a.k.a KRIGING)* to estimate log-likelihood
 on entire state space.
3. Sample from the estimated log-likelihood.
4. Calculate  exact log-likelihood.
5. Add new (location, exact log-likelihood) pair to data set.
6. Goto 1 until you've had enough.
7. Sample from the posterior estimated log-likelihood.



Quickstart
--------------------------------------------------------------------------------
You may start by typing "make tests" in the command line. Let them run. You may
then take a look at the short example.py file. You will also be required to look
at the even shorter wrapper script called rap.py. 



General Information
--------------------------------------------------------------------------------
1. Whenever I refer to a "container object", I mean an instance of the class 
'Container' in the  'kernel.container' module. Usually an instance is called specs,
a short for specifications. This instance holds everything a sampler needs.
This instance is also the object you call when you want to do kriging.
 
2. You have a container object. Sampling from the posterior it defines is done by
an instance of Sampler. See example.py to see how you sample from the posterior.
If you are looking for a method similar to emcee's chain method, it is

3. To add data to a containetr use  its add_pair(x, f) method. If you want to 
add a point with unknown likelihood to the data set in the container, use the
add_point( point ) method instead. If you want the sampler to search, find and 
add a new point on its own, use its sampler.learn() method.

4. Every container object has a variable M. If you're not careful, you will not 
be able to take samples with ||x||_{inf} > M. So M needs to fit your needs. You
can read more in the documentation if you want to set a prior on the log-likelihood
or just use the setM( bigNumber ) method of members of class Container.



*The algorithm used is algorithm 2.1 in page 19 of:
Gaussian Processes for Machine Learning, Rasmussen & Williams, 2006.